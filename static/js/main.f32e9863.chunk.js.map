{"version":3,"sources":["components/navBar.jsx","components/home.jsx","components/projectPreview.jsx","assets/images/CrankTheCoal.PNG","assets/images/Jolaspelet.PNG","assets/images/Klimakalkulator.PNG","assets/images/TurnBased.PNG","components/projects.jsx","assets/images/Crank03.PNG","assets/images/CrankTrello.PNG","assets/images/CrankCatapult.png","assets/videos/CamperSitting.mp4","assets/videos/Run.mp4","assets/videos/Idle.mp4","components/crankTheCoal.jsx","components/jolaspelet.jsx","assets/images/TurnBasedLevelLayout.PNG","assets/videos/tower_LevelEditor.mp4","assets/videos/tower_Level1.mp4","components/theTower.jsx","assets/images/Climate01.png","assets/images/Climate02.png","assets/images/Climate03.png","components/climateCalculator.jsx","assets/images/avatarImage.jpg","components/about.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","useState","position","navStyle","setNavStyle","fixedCheck","window","scrollY","innerHeight","top","useEffect","addEventListener","history","useHistory","className","style","to","spy","smooth","duration","onClick","push","Home","id","offset","ProjectPreview","image","title","description","url","display","src","Projects","crank","jolaspelet","klimakalkulator","turnBased","projects","map","project","CrankTheCoal","href","target","img3","alt","trello","catapult","anim1","controls","anim3","Jolaspelet","TheTower","level1","turnBasedLevelLayout","levelEditor","ClimateCalculator","image01","image02","image03","About","avatar","App","basename","exact","path","component","crankTheCoal","Tower","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f32e9863.chunk.js","sourcesContent":["import { Link } from \"react-scroll\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  const [navStyle, setNavStyle] = useState({\r\n    position: \"absolute\",\r\n  });\r\n\r\n  const fixedCheck = () => {\r\n    if (\r\n      window.scrollY > window.innerHeight &&\r\n      navStyle != { position: \"fixed\", top: \"0\" }\r\n    ) {\r\n      setNavStyle({ position: \"fixed\", top: \"0\" });\r\n    } else if (\r\n      window.scrollY < window.innerHeight &&\r\n      navStyle != { position: \"absolute\" }\r\n    ) {\r\n      setNavStyle({ position: \"absolute\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", fixedCheck);\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  function routeToHome() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"navBar\" style={navStyle}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"home\" spy={true} smooth={true} duration={500}>\r\n            HOME\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"projectPlacement\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n            onClick={routeToHome}\r\n          >\r\n            PROJECTS\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"about\" spy={true} smooth={true} duration={500}>\r\n            ABOUT\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Link } from \"react-scroll\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div id=\"home\">\r\n      <h1>Hi, I'm Bj√∏rne Oma</h1>\r\n      <h2>Programmer, UX designer and Game Developer</h2>\r\n      <Link\r\n        className=\"myWorkButton\"\r\n        to=\"projectPlacement\"\r\n        spy={true}\r\n        smooth={true}\r\n        duration={500}\r\n        offset={1}\r\n      >\r\n        View My Work\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst ProjectPreview = ({ image, title, description, url }) => {\r\n  return (\r\n    <Link to={url}>\r\n      <span style={{ display: \"block\" }}>\r\n        <div className=\"projectPreview\">\r\n          <img className=\"projectPreviewImage\" src={image} />\r\n          <p className=\"projectPreviewTitle\">{title}</p>\r\n          <p className=\"projectPreviewText\">{description}</p>\r\n          <p className=\"clickToSeeMore\">Click To Read More</p>\r\n        </div>\r\n      </span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProjectPreview;\r\n","export default __webpack_public_path__ + \"static/media/CrankTheCoal.0f2beb27.PNG\";","export default __webpack_public_path__ + \"static/media/Jolaspelet.e9b2db5b.PNG\";","export default __webpack_public_path__ + \"static/media/Klimakalkulator.ed21dff9.PNG\";","export default __webpack_public_path__ + \"static/media/TurnBased.bc104423.PNG\";","import ProjectPreview from \"./projectPreview\";\r\nimport { useState } from \"react\";\r\nimport crank from \"../assets/images/CrankTheCoal.PNG\";\r\nimport jolaspelet from \"../assets/images/Jolaspelet.PNG\";\r\nimport klimakalkulator from \"../assets/images/Klimakalkulator.PNG\";\r\nimport turnBased from \"../assets/images/TurnBased.PNG\";\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([\r\n    {\r\n      title: \"CRANK THE COAL, BOB\",\r\n      description: \"2-player local coop-game\",\r\n      image: crank,\r\n      url: \"/crankthecoal\",\r\n      id: 1,\r\n    },\r\n    {\r\n      title: \"CHRISTMAS GAME\",\r\n      description: \"Typing game for young and old!\",\r\n      image: jolaspelet,\r\n      url: \"/jolaspelet\",\r\n      id: 2,\r\n    },\r\n    {\r\n      title: \"CLIMATE CALCULATOR\",\r\n      description: \"Climate Calculator prototype made for NRK\",\r\n      image: klimakalkulator,\r\n      url: \"/climateCalculator\",\r\n      id: 3,\r\n    },\r\n    {\r\n      title: \"THE TOWER\",\r\n      description: \"Turn based puzzle game\",\r\n      image: turnBased,\r\n      url: \"/theTower\",\r\n      id: 4,\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <div id=\"projects\">\r\n      <h1 className=\"sectionHeader\">Projects</h1>\r\n      <div>\r\n        {projects.map((project) => (\r\n          <ProjectPreview\r\n            image={project.image}\r\n            title={project.title}\r\n            description={project.description}\r\n            url={project.url}\r\n            key={project.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/Crank03.ceebe8f6.PNG\";","export default __webpack_public_path__ + \"static/media/CrankTrello.828d6fa2.PNG\";","export default __webpack_public_path__ + \"static/media/CrankCatapult.e65b1174.png\";","export default __webpack_public_path__ + \"static/media/CamperSitting.bb5f2b9d.mp4\";","export default __webpack_public_path__ + \"static/media/Run.805b57c2.mp4\";","export default __webpack_public_path__ + \"static/media/Idle.fae493c2.mp4\";","import img3 from \"../assets/images/Crank03.PNG\";\r\nimport trello from \"../assets/images/CrankTrello.PNG\";\r\nimport catapult from \"../assets/images/CrankCatapult.png\";\r\nimport anim1 from \"../assets/videos/CamperSitting.mp4\";\r\nimport anim2 from \"../assets/videos/Idle.mp4\";\r\nimport anim3 from \"../assets/videos/Run.mp4\";\r\n\r\nconst CrankTheCoal = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <h1 className=\"sectionHeader\">Crank The Coal, Bob</h1>\r\n      <p>\r\n        Crank the Coal, Bob is a two player game about driving a coal-fueled\r\n        motorized castle. The players need to communicate and cooperate to keep\r\n        the engine running, while also steering away from obstacles. The game\r\n        can be downloaded and played{\" \"}\r\n        <a href=\"https://bjorne-oma.itch.io/crank-the-coal-bob\" target=\"_blank\">\r\n          here\r\n        </a>\r\n        .\r\n      </p>\r\n      <img src={img3} alt=\"\" />\r\n      <h2>The Idea</h2>\r\n      <p>\r\n        I solo developed this project in a week in the beginning of January\r\n        2021, using mainly Unity with C# and Blender. The project had two main\r\n        purposes: Practicing low poly 3d-art(as I had just started learning\r\n        Blender), and completing a project in a limited amount of time.\r\n      </p>\r\n\r\n      <p>\r\n        I gave myself one week to complete the game, and started right away by\r\n        brainstorming ideas. After splatting enough ink on my virtual\r\n        whiteboard, the idea came to me. I wanted to replicate the game-feel of\r\n        one of my favorite games, Overcooked. Overcooked is a multiplayer\r\n        local-coop game about running a restaurant with all kinds of impractical\r\n        kitchens. It is heavily reliant on cooperation, and it is also chaotic\r\n        and a ton of fun.\r\n      </p>\r\n      <p>\r\n        I don't know how the idea of creating a coal-fueled castle came to me,\r\n        but when it did I went with it, as the clock was ticking. I quickly\r\n        sketched the game, and spent some time figuring most of the tasks that\r\n        needed to be done.\r\n      </p>\r\n\r\n      <h2>Getting Organized</h2>\r\n      <p>\r\n        To organize all these tasks, and to make sure I was always on track to\r\n        finish the game in time, I used Trello. I divided all the tasks by type,\r\n        i.e. coding, modeling, animation, and set a date for each of the\r\n        categories to be finished. This ended up working great, and in the end\r\n        the (very close to) empty trello board was a beatiful sight.\r\n      </p>\r\n      <img src={trello} alt=\"\" />\r\n\r\n      <h2>Art</h2>\r\n      <div className=\"dirRow\">\r\n        <p>\r\n          The style I went for is a simplistic low-poly 3d-look. This style has\r\n          two big advantages over a lot of other styles. It's low poly count\r\n          makes it very performant, which means I don't need to spend a lot of\r\n          time optimizing. It is also very quick and easy to make, which is\r\n          cruicial for a project with a time budget of a week.\r\n        </p>\r\n        <img src={catapult} alt=\"\" />\r\n      </div>\r\n\r\n      <p>\r\n        I modeled all the meshes in Blender, a powerful and free 3d software. I\r\n        reused as much as possible, for example by only making one human and\r\n        using it for both the players and all the NPCs(non-player characters) in\r\n        the game. Some of the models were static, for example the trees and\r\n        rocks, while others needed to be animated. To do this, I rigged them,\r\n        which is to create a bone structure that deforms the mesh automatically.\r\n        This made it so I could just rotate a few bones instead of moving\r\n        hundreds of vertices when animating.\r\n      </p>\r\n      <div className=\"dirRow\">\r\n        <video src={anim1} controls></video>\r\n        <video src={anim3} controls></video>\r\n      </div>\r\n      <h2>Logic</h2>\r\n      <p>\r\n        The code for this game was quite simple to make, as there were no\r\n        complex systems like enemy AI or loading and unloading objects\r\n        dynamically. My main focus was on balancing writing scalable and clean\r\n        code so finding bugs would be easier, and writing quick dirt code that\r\n        would get the job done.\r\n      </p>\r\n      <h2>SFX and VFX</h2>\r\n      <p>\r\n        For the sound I used the free sound library Zapsplat.com. It had all the\r\n        sounds I needed from engine noise to people shouting. I processed the\r\n        audio in Audacity, a free audio editing sofware.\r\n      </p>\r\n      <p>\r\n        The VFX were also quite simple. All the particles in the game are made\r\n        up of cubes. For the smoke, I made black transparent cubes that grow\r\n        over time. The fire particles have an emissive material(they give off\r\n        light) and shrink over time. The results were more than acceptable. I\r\n        especially like the look on the forests that catch fire. Look at that\r\n        bloom!\r\n      </p>\r\n      {/*Video av skog som brenner */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrankTheCoal;\r\n","const Jolaspelet = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <h1 className=\"sectionHeader\">Jolaspelet 2020</h1>\r\n      <p>\r\n        Jolaspelet 2020 (translates to \"The Christmas Game\") is a game I made\r\n        with my brother as a competetive game for me and my wife's families to\r\n        play during the christmas holiday. I made a very rudimentary game for\r\n        christmas 2019 that became a hit, so I wanted to make this battle of the\r\n        clans into a christmas tradition.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jolaspelet;\r\n","export default __webpack_public_path__ + \"static/media/TurnBasedLevelLayout.47e02d48.PNG\";","export default __webpack_public_path__ + \"static/media/tower_LevelEditor.533acaa3.mp4\";","export default __webpack_public_path__ + \"static/media/tower_Level1.e95f308a.mp4\";","import turnBased from \"../assets/images/TurnBased.PNG\";\r\nimport turnBasedLevelLayout from \"../assets/images/TurnBasedLevelLayout.PNG\";\r\nimport levelEditor from \"../assets/videos/tower_LevelEditor.mp4\";\r\nimport level1 from \"../assets/videos/tower_Level1.mp4\";\r\n\r\nconst TheTower = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <h1 className=\"sectionHeader\">The Tower</h1>\r\n      <p>\r\n        The Tower is a turn-based puzzle game about getting colored boxes to\r\n        their colors side of a tower. I made the prototype in about a week, and\r\n        I learned a lot from it. Let me show you how it works!\r\n      </p>\r\n      <img src={turnBased} alt=\"\" />\r\n      <h2>The Game</h2>\r\n      <p>\r\n        The game is turn based, and each turn the player can move one of it's\r\n        green \"hero\" boxes up to three tiles. After the player has moved, the\r\n        blue and red \"enemy\" boxes move one tile in the direction that their\r\n        arrow indicates. If there is a green box in the way of an enemy moving,\r\n        it will instead turn to face the other colors side. If two enemies move\r\n        into the same square on the same turn, they both dissapear. The players\r\n        goal is to get all of the enemies to their colors side.\r\n      </p>\r\n      <video src={level1} controls></video>\r\n      <h2>The Data Structure</h2>\r\n      <p>\r\n        The heart of the data structure is the Tile Manager, which holds the two\r\n        dimensional array of tiles that represent the board. It also has methods\r\n        for changing the colors of the tiles based on who's turn it is, and also\r\n        which hero the player has chosen(if any).\r\n      </p>\r\n      <p>\r\n        Another key piece of the puzzle is the Unit Manager. It holds a List of\r\n        all the Units in the current level. Each unit holds an (int, int)-tuple\r\n        which represents it's position on the board, and is a member of one of\r\n        the subclasses Enemy or Hero. The Enemy class holds a color(blue or red)\r\n        and the direction they are going in. Each turn, the Unit Manager tells\r\n        the Tile Manager which state the game is in, and feeds it which Hero has\r\n        been chosen. The Tile Manager then updates the colors of the tiles to\r\n        show the player which tiles can be clicked.\r\n      </p>\r\n      <div className=\"dirRow\">\r\n        <p>\r\n          The layout of each level is stored in a scriptable object class named\r\n          Level Layout. Scriptable objects in Unity are scripts that can be\r\n          instantiated on files in the project instead of on objects in the\r\n          scene. The Level Layout holds an array of all the hero starting\r\n          positions and all the enemy starting positions in the level. The enemy\r\n          starting positions also contain which color the enemy is, and which\r\n          direction it starts in. With this system I can create new Level Layout\r\n          files and set the position of all the units, as shown in the picture.\r\n          This is incredibly tedious, since you have to count out where each\r\n          piece is on the x- and y-axes. Luckily I had an idea on how to\r\n          simplify this process.\r\n        </p>\r\n        <img src={turnBasedLevelLayout} alt=\"\" />\r\n      </div>\r\n\r\n      {/*<p> THE ANIMATION QUEUE SYSTEM\r\n        To make what is happening on the enemies' turn I wanted to animate the\r\n        pieces instead of them snapping to the next turn instantly. To do this I\r\n        made an Animation Manager that uses a Sine Wave to first rotate the\r\n        enemies, then move them to their next location. While this was\r\n        happening, the buttons needed to be disabled, and so\r\n      </p>*/}\r\n\r\n      <h2>The Level Editor</h2>\r\n      <p>\r\n        The level editor lets me click tiles and use keys on the keyboard to\r\n        change it. The operations include creating a hero, creating an enemy,\r\n        deleting a unit, changing the color of an enemy, and changing an enemies\r\n        starting rotation. This tool makes creating and levels a lot faster, and\r\n        infinitely more intuitive.\r\n      </p>\r\n      <video src={levelEditor} controls></video>\r\n\r\n      <h2>Next Steps</h2>\r\n      <p>\r\n        If I was to build on this prototype and turn it into an actual game, I\r\n        would have three main goals.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheTower;\r\n","export default __webpack_public_path__ + \"static/media/Climate01.2258a5da.png\";","export default __webpack_public_path__ + \"static/media/Climate02.133f204a.png\";","export default __webpack_public_path__ + \"static/media/Climate03.caa934f7.png\";","import image01 from \"../assets/images/Climate01.png\";\r\nimport image02 from \"../assets/images/Climate02.png\";\r\nimport image03 from \"../assets/images/Climate03.png\";\r\n\r\nconst ClimateCalculator = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <h1 className=\"sectionHeader\">Climate Calculator</h1>\r\n      <p>\r\n        This is a prototype made for NRK in a school project. I worked in a\r\n        group of four students to make a climate calculator that would be more\r\n        intuitive, fun and impactful than their current solution.\r\n      </p>\r\n      <p>\r\n        To get in depth information about our methods and design decisions, read\r\n        our published thesis on the project:{\" \"}\r\n        <a\r\n          href=\"https://static1.squarespace.com/static/599605d5f9a61e19fde4acc0/t/5f1b3136ba6fd7275100641b/1595617676519/Klimakalkulator.pdf\"\r\n          target=\"_blank\"\r\n        >\r\n          Norwegian\r\n        </a>\r\n        {\", \"}\r\n        <a\r\n          href=\"https://static1.squarespace.com/static/599605d5f9a61e19fde4acc0/t/5f1b308aa3a9b84512f37ad6/1595617561182/Climate+calculator.pdf\"\r\n          target=\"_blank\"\r\n        >\r\n          English\r\n        </a>\r\n        .\r\n      </p>\r\n      <p>\r\n        You can also test our Figma-prototype{\" \"}\r\n        <a\r\n          href=\"https://www.figma.com/proto/PHd50AAjeMKN6mPw4NkVtx/Klimakalkulator---Prototype?XyJmvn=&scaling=scale-down&node-id=1%3A4\"\r\n          target=\"_blank\"\r\n        >\r\n          here\r\n        </a>{\" \"}\r\n        to see how the end result feels.\r\n      </p>\r\n      <div className=\"tripleImage\">\r\n        <img src={image01} alt=\"\" />\r\n        <img src={image02} alt=\"\" />\r\n        <img src={image03} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClimateCalculator;\r\n","export default __webpack_public_path__ + \"static/media/avatarImage.4317f6b6.jpg\";","import avatar from \"../assets/images/avatarImage.jpg\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <h1 className=\"sectionHeader\">About</h1>\r\n      <div>\r\n        <div className=\"aboutText\">\r\n          <img alt=\"Bilde\" src={avatar} className=\"avatar\" />\r\n          <p>\r\n            My name is Bj√∏rne Oma. I am 22 years old, and currently live in\r\n            Bergen, where I am taking a bachelors degree in Media- and\r\n            Interaction Design. I love making games, and I also love making\r\n            software that makes people's lives easier.\r\n          </p>\r\n          <p>\r\n            bjorneoma@gmail.com <br />\r\n            957 84 182 <br />\r\n            <a href=\"https://www.linkedin.com/in/bj√∏rne-oma/\" target=\"_blank\">\r\n              LinkedIn\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"aboutSkills\">\r\n          <div className=\"skill programming\">\r\n            <div className=\"circle huge\">Programming</div>\r\n            <div className=\"tools\">\r\n              <div className=\"bigTools\">\r\n                <div className=\"circle big\">C#</div>\r\n                <div className=\"circle big\">Git</div>\r\n              </div>\r\n              <div className=\"smallTools\">\r\n                <div className=\"circle small\">Javascript</div>\r\n                <div className=\"circle small\">Python</div>\r\n                <div className=\"circle small\">CSS</div>\r\n                <div className=\"circle small\">React</div>\r\n                <div className=\"circle small\">HTML</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"skill ux\">\r\n            <div className=\"circle huge\">UX Design</div>\r\n            <div className=\"tools\">\r\n              <div className=\"bigTools\">\r\n                <div className=\"circle big\">\r\n                  Google\r\n                  <br /> Design\r\n                  <br /> Sprint\r\n                </div>\r\n                <div className=\"circle big\">Figma</div>\r\n                <div className=\"circle big\">\r\n                  User\r\n                  <br /> Testing\r\n                </div>\r\n              </div>\r\n              <div className=\"smallTools\">\r\n                <div className=\"circle small\">Adobe XD</div>\r\n                <div className=\"circle small\">\r\n                  Design\r\n                  <br /> Thinking\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"skill gameDev\">\r\n            <div className=\"circle huge\">\r\n              Game\r\n              <br />\r\n              Development\r\n            </div>\r\n            <div className=\"tools\">\r\n              <div className=\"bigTools\">\r\n                <div className=\"circle big\">Unity</div>\r\n                <div className=\"circle big\">C#</div>\r\n              </div>\r\n              <div className=\"smallTools\">\r\n                <div className=\"circle small\">Blender</div>\r\n                <div className=\"circle small\">Krita</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import NavBar from \"./components/navBar\";\nimport \"./assets/styles.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Projects from \"./components/projects\";\nimport crankTheCoal from \"./components/crankTheCoal\";\nimport jolaspelet from \"./components/jolaspelet\";\nimport Tower from \"./components/theTower\";\nimport ClimateCalculator from \"./components/climateCalculator\";\nimport About from \"./components/about\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Home />\n        <NavBar />\n        <div id=\"projectPlacement\" />\n        <Route exact path=\"/\" component={Projects} />\n        <Route exact path=\"/crankTheCoal\" component={crankTheCoal} />\n        <Route exact path=\"/jolaspelet\" component={jolaspelet} />\n        <Route exact path=\"/theTower\" component={Tower} />\n        <Route exact path=\"/climateCalculator\" component={ClimateCalculator} />\n        <About />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}